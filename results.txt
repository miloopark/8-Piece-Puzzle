{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red246\green246\blue246;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c97255\c97255\c97255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs21\fsmilli10800 \cf2 \cb3 \expnd0\expndtw0\kerning0
puzzles with 5-move optimal solutions\
-------------------------------------\
algorithm                num. solved    avg. moves    avg. states tested\
------------------------------------------------------------------------\
random                       10            5.6              533.0\
BFS                          10            5.0              47.1\
DFS (depth limit 20)         10            16.2             19072.7\
DFS (depth limit 50)         10            48.2             49043.0\
Greedy Search (using h1)     10            5.4              70.3\
A* (using h1)                10            5.0              6.5\
\
In puzzles with 5-move optimal solutions, only the BFS and A* algorithm have \
optimal solutions. The random and Greedy Search were close to optimal with 5.6\
and 5.4, whereas the DFS algorithms with depth limit 20 and 50 took the longest\
with DFS (depth limit 50) taking the longest by far with 48.2 avg. moves.\
\
puzzles with 10-move optimal solutions\
-------------------------------------\
algorithm                num. solved    avg. moves    avg. states tested\
------------------------------------------------------------------------\
random                       10            12.4             6228.7\
BFS                          10            10.0             747.4\
DFS (depth limit 20)         10            18.8             24858.0\
DFS (depth limit 50)         10            49.2             92287.3\
Greedy Search (using h1)     8             76.0             325.625\
A* (using h1)                10            10.0             27.3\
\
In puzzles with 10-move optimal solutions, only the BFS and A* algorithms have\
optimal solutions, just like the puzzle with 5-move optimal solutions. This\
time, the Greedy Search took the longest with an avg. of 76 moves. \
\
puzzles with 15-move optimal solutions\
-------------------------------------\
algorithm                num. solved    avg. moves    avg. states tested\
------------------------------------------------------------------------\
random                       10            17.4             22744.2       \
BFS                          10            15.0             12672.0\
DFS (depth limit 20)         10            17.8             68659.0\
DFS (depth limit 50)         10            48.6             111406.0\
Greedy Search (using h1)     5             68.2             1295.0\
A* (using h1)                10            15.0             313.8\
\
In puzzles with 15-move optimal solutions, only the BFS and A* algorithms have\
optimal solutions, a correlation established from the 5 and 10-move optimal\
solution puzzles. The Greedy Search took the longest just like the puzzle with \
10-move optimal solutions.\
\
\
heuristic h2\
------------\
This heuristic function loops around and looks for a number and figures out whether\
or not the number is in the right row or column. Then it adds up all the times a number\
was in the wrong row or column and returns that number.\
\
\
puzzles with 18-move optimal solutions\
--------------------------------------\
algorithm              num. solved    avg. moves    avg. states tested\
----------------------------------------------------------------------\
Greedy (heuristic h1)       5             133.6            541.0\
Greedy (heuristic h2)       10            89.9             374.9\
A* (heuristic h1)           10            18.0             1602.0\
A* (heuristic h2)           10            18.0             576.0\
\
In puzzles with 18-move optimal solutions, only the A* algorithms have\
optimal solutions. The Greedy Search with heuristic h1 took the longest.\
\
puzzles with 21-move optimal solutions\
--------------------------------------\
algorithm              num. solved    avg. moves    avg. states tested\
----------------------------------------------------------------------\
Greedy (heuristic h1)      4               109.0            416.5\
Greedy (heuristic h2)      10              113.0            428.9      \
A* (heuristic h1)          4               109.0            416.5\
A* (heuristic h2)          10              21.0             1974.6\
\
In puzzles with 21-move optimal solutions, only the A* algorithm with\
heuristic 2 has an optimal solution. The Greedy Search with heuristic h2 \
took the longest.\
\
puzzles with 24-move optimal solutions\
--------------------------------------\
algorithm              num. solved    avg. moves    avg. states tested\
----------------------------------------------------------------------\
Greedy (heuristic h1)      6               123.7           2856.2\
Greedy (heuristic h2)      10              134.4           583.9\
A* (heuristic h1)          2               24.0            25020.0\
A* (heuristic h2)          10              24.0            7205.2\
\
In puzzles with 24-move optimal solutions, only the A* algorithms\
have optimal solutions. The Greedy Search with heuristic h2 \
took the longest, we can see this correlation with 21-move optimal solutions.\
\
puzzles with 27-move optimal solutions\
--------------------------------------\
algorithm              num. solved    avg. moves    avg. states tested\
----------------------------------------------------------------------\
Greedy (heuristic h1)      2               129.0           1270.5\
Greedy (heuristic h2)      10              109.2           393.1\
A* (heuristic h1)          0               0               0\
A* (heuristic h2)          7               27.0            35628.0\
\
In puzzles with 27-move optimal solutions, only the A* algorithm with\
heuristic 2 has an optimal solution. The Greedy Search with heuristic h1\
took the longest. We can see a correlation that the Greedy Search always\
takes the longest and has the most average moves. \
\
}